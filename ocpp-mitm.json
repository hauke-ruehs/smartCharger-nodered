[
    {
        "id": "aac3d0caf2838c4f",
        "type": "CS server",
        "z": "6cd485d1285d546b",
        "name": "",
        "port": "8181",
        "enabled15": false,
        "path15": "",
        "enabled16": false,
        "path16": "",
        "enabled16j": true,
        "path16j": "",
        "log": false,
        "pathlog": "",
        "x": 240,
        "y": 200,
        "wires": [
            [
                "f80a91f566e7d32f",
                "39adac989321bfbd"
            ]
        ]
    },
    {
        "id": "f80a91f566e7d32f",
        "type": "debug",
        "z": "6cd485d1285d546b",
        "name": "debug 60",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "ocpp.command",
        "statusType": "jsonata",
        "x": 480,
        "y": 140,
        "wires": []
    },
    {
        "id": "5e6fde5b1f759c9a",
        "type": "CS request JSON",
        "z": "6cd485d1285d546b",
        "name": "",
        "remotecb": "d5c732aab50fec48",
        "command": "",
        "cmddata": "",
        "log": true,
        "pathlog": "",
        "x": 200,
        "y": 640,
        "wires": [
            [
                "d9663a75bb0f497f",
                "81093fa70e56c99d"
            ]
        ]
    },
    {
        "id": "d9663a75bb0f497f",
        "type": "debug",
        "z": "6cd485d1285d546b",
        "name": "debug 61",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "ocpp.command",
        "statusType": "jsonata",
        "x": 380,
        "y": 700,
        "wires": []
    },
    {
        "id": "37783fb2a3b2bd60",
        "type": "server response",
        "z": "6cd485d1285d546b",
        "name": "",
        "x": 1240,
        "y": 200,
        "wires": []
    },
    {
        "id": "3b2755994b2c17b0",
        "type": "function",
        "z": "6cd485d1285d546b",
        "name": "function 32",
        "func": "let command = msg.ocpp.command; // Get command from response\nlet responseMap = flow.get('responseMap') || {};\n//let requestMap = flow.get('requesteMap') || {};\n\n// Filter out the key \"undefined\" from the data object\nObject.keys(responseMap).forEach(key => {\n    if (key === \"undefined\") {\n        delete responseMap[key];\n    }\n});\n\nlet serverResponse = responseMap[command];\n//let serverRequest = requestMap[command];\n\nif (!serverResponse) {\n    // If server response isn't ready, set a delay and retry\n    return [\n        null, // First output does nothing in this pass\n        { msg }\n    ];\n}\n\n// When the response is ready, continue with processing\n\n// Set message structure based on the received response\nmsg.payload = serverResponse.payload;\n\n// Remove the response from `responseMap` if needed\ndelete responseMap[command];\nflow.set('responseMap', responseMap); // Update the responseMap in flow context\n\nreturn [msg, null]; // Send msg to the first output to continue processing\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 220,
        "wires": [
            [
                "37783fb2a3b2bd60",
                "7ef443927d772554"
            ],
            [
                "1be649ed7bea4663"
            ]
        ]
    },
    {
        "id": "58fa56736ebf44d5",
        "type": "debug",
        "z": "6cd485d1285d546b",
        "name": "debug 67",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 280,
        "wires": []
    },
    {
        "id": "a857868333d61509",
        "type": "CP client JSON",
        "z": "6cd485d1285d546b",
        "name": "proxy",
        "cbId": "garage0",
        "remotecs": "a920bc54828cdce0",
        "ocppver": "1.6j",
        "command": "",
        "cmddata": "",
        "log": false,
        "pathlog": "",
        "wsdelayconnect": true,
        "wstomin": 5,
        "wstomax": 360,
        "wstoinc": 5,
        "x": 590,
        "y": 520,
        "wires": [
            [
                "ac31ca8ea48f9a76"
            ]
        ]
    },
    {
        "id": "c122e884928436f0",
        "type": "debug",
        "z": "6cd485d1285d546b",
        "name": "debug 72",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "ocpp.command",
        "statusType": "jsonata",
        "x": 1060,
        "y": 680,
        "wires": []
    },
    {
        "id": "7ef443927d772554",
        "type": "debug",
        "z": "6cd485d1285d546b",
        "name": "debug 75",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "ocpp.command",
        "statusType": "jsonata",
        "x": 1220,
        "y": 260,
        "wires": []
    },
    {
        "id": "b185c78168d96289",
        "type": "switch",
        "z": "6cd485d1285d546b",
        "name": "",
        "property": "ocpp.websocket",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ONLINE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "OFFLINE",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 630,
        "y": 220,
        "wires": [
            [],
            [],
            [
                "2f9160943edc389c",
                "1e08fb8855e6c6ed"
            ]
        ]
    },
    {
        "id": "39adac989321bfbd",
        "type": "switch",
        "z": "6cd485d1285d546b",
        "name": "select CP",
        "property": "ocpp.chargeBoxIdentity",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "garage0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "garage1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "garage2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "garage3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 500,
        "y": 220,
        "wires": [
            [],
            [
                "b185c78168d96289"
            ],
            [],
            []
        ]
    },
    {
        "id": "2f1acc16df21d9a5",
        "type": "function",
        "z": "6cd485d1285d546b",
        "d": true,
        "name": "handle Response",
        "func": "\nlet command = msg.ocpp.command; // Get command from response\n    \n// Retrieve the original MessageId for this command\nlet messageMap2 = flow.get('messageMap2') || {};\nlet originalMessageId = messageMap2[command];\n    \nif (originalMessageId) {\n\n    msg.ocpp.MessageId = originalMessageId; // Set original MessageId\n    //msg.msgId = originalMessageId; // Set original MessageId\n    delete messageMap2[command]; // Optionally remove it after use\n    flow.set('messageMap2', messageMap2); // Update map in flow context\n}else {\n    // If no original MessageId is found for the command, log a message (optional)\n    node.warn(`Original MessageId not found for command: ${command}`);\n}\n\n// msg.payload = msg.payload;\n\nmsg.payload = {\n    command: command,\n    data: msg.payload.data\n}\n\nmsg.ocpp.chargeBoxIdentity = \"garage0\";\n\n//if(msg.ocpp.command === 'ChangeAvailability'){\n//        msg.payload.data.type = \"Operative\";\n//    }\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "1df8a9c61a5642b1",
        "type": "debug",
        "z": "6cd485d1285d546b",
        "name": "debug 84",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "ocpp.command",
        "statusType": "jsonata",
        "x": 600,
        "y": 700,
        "wires": []
    },
    {
        "id": "1e08fb8855e6c6ed",
        "type": "function",
        "z": "6cd485d1285d546b",
        "name": "handle Request",
        "func": "\n//let requestMap = flow.get('requestMap') || {};\n\nlet command = msg.ocpp.command;\n\n//let messageId = msg.msgId;\n\n// Store the MessageId under the command\n//requestMap[command] = msg;\n\n// Update the flow context with the new messageMap\n//flow.set('requestMap', requestMap);\n\n\nif(command === 'BootNotification'){\n    msg.payload.data.chargePointVendor = \"Huawei\";\n    }\n\n// Set chargeBoxIdentity (optional)\nmsg.ocpp.chargeBoxIdentity = \"garage0\";\n//msg.payload = msg.payload;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 380,
        "wires": [
            [
                "a857868333d61509",
                "23c567d637a55829"
            ]
        ]
    },
    {
        "id": "23c567d637a55829",
        "type": "debug",
        "z": "6cd485d1285d546b",
        "name": "debug 85",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 380,
        "wires": []
    },
    {
        "id": "ac31ca8ea48f9a76",
        "type": "switch",
        "z": "6cd485d1285d546b",
        "name": "Command Switch",
        "property": "ocpp.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ChangeConfiguration",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GetConfiguration",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RemoteStartTransaction",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RemoteStopTransaction",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SetCharginProfile",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TriggerMessage",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "UpdateFirmware",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ChangeAvailability",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GetCompositeSchedule",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "repair": false,
        "outputs": 11,
        "x": 770,
        "y": 520,
        "wires": [
            [
                "cf47b3563bdb1cfe"
            ],
            [
                "cf47b3563bdb1cfe"
            ],
            [
                "cf47b3563bdb1cfe"
            ],
            [
                "cf47b3563bdb1cfe"
            ],
            [
                "cf47b3563bdb1cfe"
            ],
            [
                "cf47b3563bdb1cfe"
            ],
            [
                "cf47b3563bdb1cfe"
            ],
            [
                "cf47b3563bdb1cfe"
            ],
            [
                "cf47b3563bdb1cfe"
            ],
            [
                "cf47b3563bdb1cfe"
            ],
            [
                "c122e884928436f0",
                "5d1ce6eb91724385"
            ]
        ]
    },
    {
        "id": "a502e1f6d47dd8be",
        "type": "debug",
        "z": "6cd485d1285d546b",
        "name": "debug 87",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 160,
        "y": 600,
        "wires": []
    },
    {
        "id": "81093fa70e56c99d",
        "type": "function",
        "z": "6cd485d1285d546b",
        "name": "handle Response",
        "func": "function reorderObject(obj) {\n    // Check if \"status\" exists in the object, if so place it first\n    let reorderedObj = {};\n\n    if (obj.hasOwnProperty(\"status\")) {\n        reorderedObj[\"status\"] = obj[\"status\"];\n    }\n\n    // Add all other properties in their original order, except \"status\"\n    for (let key in obj) {\n        if (key !== \"status\") {\n            reorderedObj[key] = obj[key];\n        }\n    }\n\n    return reorderedObj;\n}\n\nmsg.ocpp.chargeBoxIdentity = \"garage0\";\nmsg.payload.command = msg.ocpp.command;\n\nmsg.payload.data.status = \"Accepted\"; // Status of the request\n\nmsg.payload.msgType = msg.ocpp.msgType;\n\nif(msg.ocpp.command === 'ChangeAvailability'){\n        msg.payload.data.type = \"Operative\";\n    }\n\nmsg.payload.data = reorderObject(msg.payload.data);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 640,
        "wires": [
            [
                "a857868333d61509",
                "1df8a9c61a5642b1"
            ]
        ]
    },
    {
        "id": "cf47b3563bdb1cfe",
        "type": "link out",
        "z": "6cd485d1285d546b",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "25137e0e25dd0b0f"
        ],
        "x": 1105,
        "y": 560,
        "wires": []
    },
    {
        "id": "5d1ce6eb91724385",
        "type": "function",
        "z": "6cd485d1285d546b",
        "name": "function 44",
        "func": "// Create or get the map of commands and message IDs\nlet responseMap = flow.get('responseMap') || {};\n\nlet command = msg.ocpp.command;\n\n// Store the MessageId under the command\nresponseMap[command] = msg;\n\n// Update the flow context with the new messageMap\nflow.set('responseMap', responseMap);\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "1be649ed7bea4663",
        "type": "delay",
        "z": "6cd485d1285d546b",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 980,
        "y": 180,
        "wires": [
            [
                "3b2755994b2c17b0"
            ]
        ]
    },
    {
        "id": "2f9160943edc389c",
        "type": "switch",
        "z": "6cd485d1285d546b",
        "name": "",
        "property": "payload.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "BootNotification",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Heartbeat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "MeterValues",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "StartTransaction",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "StopTransaction",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 770,
        "y": 220,
        "wires": [
            [
                "3b2755994b2c17b0"
            ],
            [
                "3b2755994b2c17b0"
            ],
            [
                "3b2755994b2c17b0"
            ],
            [
                "3b2755994b2c17b0"
            ],
            [
                "3b2755994b2c17b0"
            ],
            [
                "58fa56736ebf44d5"
            ]
        ]
    },
    {
        "id": "25137e0e25dd0b0f",
        "type": "link in",
        "z": "6cd485d1285d546b",
        "name": "link in 12",
        "links": [
            "cf47b3563bdb1cfe"
        ],
        "x": 25,
        "y": 620,
        "wires": [
            [
                "5e6fde5b1f759c9a",
                "a502e1f6d47dd8be"
            ]
        ]
    },
    {
        "id": "d5c732aab50fec48",
        "type": "ocpp-remotej-cp",
        "name": "",
        "cbId": "garage1",
        "ocppver": "1.6j"
    },
    {
        "id": "a920bc54828cdce0",
        "type": "ocpp-remote-cs",
        "name": "evcc",
        "url": "ws://192.168.178.40:8887"
    }
]
