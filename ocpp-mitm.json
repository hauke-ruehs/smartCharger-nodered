[
    {
        "id": "2fb5449395574696",
        "type": "CS server",
        "z": "78a6919a908b1120",
        "name": "",
        "port": "8181",
        "enabled15": false,
        "path15": "",
        "enabled16": false,
        "path16": "",
        "enabled16j": true,
        "path16j": "",
        "log": false,
        "pathlog": "",
        "x": 200,
        "y": 200,
        "wires": [
            [
                "c18813c0de678610",
                "163ab942a9217846"
            ]
        ]
    },
    {
        "id": "c18813c0de678610",
        "type": "debug",
        "z": "78a6919a908b1120",
        "name": "debug 60",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "ocpp.command",
        "statusType": "jsonata",
        "x": 420,
        "y": 160,
        "wires": []
    },
    {
        "id": "98b30cae72081f4e",
        "type": "CS request JSON",
        "z": "78a6919a908b1120",
        "name": "",
        "remotecb": "d5c732aab50fec48",
        "command": "",
        "cmddata": "",
        "log": true,
        "pathlog": "",
        "x": 600,
        "y": 420,
        "wires": [
            [
                "b0c16c2b5cfbfa70",
                "16fdaa991566ee29"
            ]
        ]
    },
    {
        "id": "b0c16c2b5cfbfa70",
        "type": "debug",
        "z": "78a6919a908b1120",
        "name": "debug 61",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "ocpp.command",
        "statusType": "jsonata",
        "x": 780,
        "y": 480,
        "wires": []
    },
    {
        "id": "48d27908fd324633",
        "type": "server response",
        "z": "78a6919a908b1120",
        "name": "",
        "x": 1700,
        "y": 180,
        "wires": []
    },
    {
        "id": "155d19e3a05fd3ac",
        "type": "CP client JSON",
        "z": "78a6919a908b1120",
        "name": "proxy",
        "cbId": "garage1",
        "remotecs": "a920bc54828cdce0",
        "ocppver": "1.6j",
        "command": "",
        "cmddata": "",
        "log": false,
        "pathlog": "",
        "wsdelayconnect": true,
        "wstomin": 5,
        "wstomax": 360,
        "wstoinc": 5,
        "x": 990,
        "y": 280,
        "wires": [
            [
                "fd8b4a0d73e53550"
            ]
        ]
    },
    {
        "id": "e7b0014934a34cf1",
        "type": "function",
        "z": "78a6919a908b1120",
        "name": "function 40",
        "func": "\nfunction reorderObject(obj) {\n    // Check if \"status\" exists in the object, if so place it first\n    let reorderedObj = {};\n\n    if (obj.hasOwnProperty(\"status\")) {\n        reorderedObj[\"status\"] = obj[\"status\"];\n    }\n\n    // Add all other properties in their original order, except \"status\"\n    for (let key in obj) {\n        if (key !== \"status\") {\n            reorderedObj[key] = obj[key];\n        }\n    }\n\n    return reorderedObj;\n}\n\nfunction reorderResponse(obj) {\n    // Reorder the properties in the specified order\n    return {\n        ocpp: obj.ocpp,\n        _msgid: obj._msgid,\n        payload: obj.payload,\n        msgId: obj.msgId\n    };\n}\n\n////\n\nlet command = msg.ocpp.command; // Get command from response\n    \n// Retrieve the original MessageId for this command\nlet messageMap = flow.get('messageMap') || {};\nlet originalMessageId = messageMap[command];\n    \n\n//msg.ocpp = originalMessageId.ocpp; // Set original MessageId\n//msg.payload.command = command;\n//msg.payload.msgType = msg.ocpp.msgType;\nmsg.msgId = originalMessageId.msgId; // Set original MessageId\nmsg._msgid = originalMessageId._msgid; // Set original MessageId\n\ndelete messageMap[command]; // Optionally remove it after use\nflow.set('messageMap', messageMap); // Update map in flow context\n\n// Set chargeBoxIdentity (optional)\n//msg.ocpp.chargeBoxIdentity = \"garage1\";\n//msg.payload.data = reorderObject(msg.payload.data);\nmsg.payload = reorderObject(msg.payload.data);\nmsg = reorderResponse(msg);\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 240,
        "wires": [
            [
                "48d27908fd324633",
                "1da6640d8882b488"
            ]
        ]
    },
    {
        "id": "1da6640d8882b488",
        "type": "debug",
        "z": "78a6919a908b1120",
        "name": "debug 75",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "ocpp.command",
        "statusType": "jsonata",
        "x": 1680,
        "y": 240,
        "wires": []
    },
    {
        "id": "4eaff62efa972c20",
        "type": "switch",
        "z": "78a6919a908b1120",
        "name": "",
        "property": "ocpp.websocket",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ONLINE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "OFFLINE",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 570,
        "y": 220,
        "wires": [
            [
                "291e0d7e2252a391"
            ],
            [
                "291e0d7e2252a391"
            ],
            [
                "8ad8df40038e5892"
            ]
        ]
    },
    {
        "id": "163ab942a9217846",
        "type": "switch",
        "z": "78a6919a908b1120",
        "name": "",
        "property": "ocpp.chargeBoxIdentity",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "garage0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "garage1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "garage2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "garage3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 430,
        "y": 240,
        "wires": [
            [],
            [
                "4eaff62efa972c20"
            ],
            [],
            []
        ]
    },
    {
        "id": "291e0d7e2252a391",
        "type": "function",
        "z": "78a6919a908b1120",
        "name": "function 42",
        "func": "\nflow.set('messageMap', {})\nflow.set('requestMap', {})\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "e28615d222647031",
        "type": "debug",
        "z": "78a6919a908b1120",
        "name": "debug 84",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "ocpp.command",
        "statusType": "jsonata",
        "x": 1000,
        "y": 480,
        "wires": []
    },
    {
        "id": "8ad8df40038e5892",
        "type": "function",
        "z": "78a6919a908b1120",
        "name": "handle Request",
        "func": "\n// Create or get the map of commands and message IDs\nlet messageMap = flow.get('messageMap') || {};\n\nlet command = msg.ocpp.command;\nlet ocpp = msg.ocpp;\nlet msgId = msg.msgId;\nlet _msgid = msg._msgid;\n\n// Store the MessageId under the command\nmessageMap[command] = {ocpp, msgId, _msgid}; \n\n// Update the flow context with the new messageMap\nflow.set('messageMap', messageMap);\n\nif(command === 'BootNotification'){\n    msg.payload.data.chargePointVendor = \"Huawei\";\n    }\n\n// Set chargeBoxIdentity (optional)\nmsg.ocpp.chargeBoxIdentity = \"garage0\";\n//msg.payload = msg.payload;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 240,
        "wires": [
            [
                "3d9d40637606f10a",
                "155d19e3a05fd3ac"
            ]
        ]
    },
    {
        "id": "3d9d40637606f10a",
        "type": "debug",
        "z": "78a6919a908b1120",
        "name": "debug 85",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 200,
        "wires": []
    },
    {
        "id": "ce55b8494194b47c",
        "type": "debug",
        "z": "78a6919a908b1120",
        "name": "debug 87",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 320,
        "wires": []
    },
    {
        "id": "16fdaa991566ee29",
        "type": "function",
        "z": "78a6919a908b1120",
        "name": "handle Response",
        "func": "function reorderObject(obj) {\n    // Check if \"status\" exists in the object, if so place it first\n    let reorderedObj = {};\n\n    if (obj.hasOwnProperty(\"status\")) {\n        reorderedObj[\"status\"] = obj[\"status\"];\n    }\n\n    // Add all other properties in their original order, except \"status\"\n    for (let key in obj) {\n        if (key !== \"status\") {\n            reorderedObj[key] = obj[key];\n        }\n    }\n\n    return reorderedObj;\n}\n\n\n\nlet command = msg.ocpp.command; // Get command from response\n\n// Retrieve the original MessageId for this command\nlet requestMap = flow.get('requestMap') || {};\nlet originalRequestId = requestMap[command];\n\nmsg.ocpp.MessageId = originalRequestId;\n//msg.ocpp.chargeBoxIdentity = \"garage0\";\nmsg.payload.command = msg.ocpp.command;\nmsg.payload.msgType = msg.ocpp.msgType;\n\n// msg.payload.data.status = \"Accepted\"; // Status of the request\n\nif(msg.ocpp.command === 'ChangeAvailability'){\n        msg.payload.data.type = \"Operative\";\n    }\n\nmsg.payload.data = reorderObject(msg.payload.data);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 420,
        "wires": [
            [
                "e28615d222647031",
                "155d19e3a05fd3ac"
            ]
        ]
    },
    {
        "id": "683975303217105c",
        "type": "link out",
        "z": "78a6919a908b1120",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "a8741373594c6c76"
        ],
        "x": 1405,
        "y": 200,
        "wires": []
    },
    {
        "id": "a8741373594c6c76",
        "type": "link in",
        "z": "78a6919a908b1120",
        "name": "link in 12",
        "links": [
            "683975303217105c"
        ],
        "x": 425,
        "y": 360,
        "wires": [
            [
                "ce55b8494194b47c",
                "cd6bf34870d2a895"
            ]
        ]
    },
    {
        "id": "cd6bf34870d2a895",
        "type": "function",
        "z": "78a6919a908b1120",
        "name": "function 43",
        "func": "// Create or get the map of commands and message IDs\nlet requestMap = flow.get('requestMap') || {};\n\nlet command = msg.ocpp.command;\nlet msgId = msg.ocpp.MessageId;\n\n// Store the MessageId under the command\nrequestMap[command] = msgId;\n\n// Update the flow context with the new messageMap\nflow.set('requestMap', requestMap);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 360,
        "wires": [
            [
                "98b30cae72081f4e"
            ]
        ]
    },
    {
        "id": "fd8b4a0d73e53550",
        "type": "switch",
        "z": "78a6919a908b1120",
        "name": "",
        "property": "ocpp.msgType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "99",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1170,
        "y": 280,
        "wires": [
            [
                "683975303217105c"
            ],
            [
                "e7b0014934a34cf1"
            ],
            [
                "870372ad15034d02"
            ],
            [
                "870372ad15034d02"
            ]
        ]
    },
    {
        "id": "870372ad15034d02",
        "type": "debug",
        "z": "78a6919a908b1120",
        "name": "debug 88",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 300,
        "wires": []
    },
    {
        "id": "d5c732aab50fec48",
        "type": "ocpp-remotej-cp",
        "name": "",
        "cbId": "garage1",
        "ocppver": "1.6j"
    },
    {
        "id": "a920bc54828cdce0",
        "type": "ocpp-remote-cs",
        "name": "evcc",
        "url": "ws://192.168.178.40:8887"
    }
]
